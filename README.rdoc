SQL task

1. get all statuses, not repeating, alphabetically ordered 

SELECT DISTINCT status FROM tasks ORDER BY status


2. get the count of all tasks in each project, order by tasks count descending

SELECT project_id, COUNT(id)
FROM tasks
GROUP BY project_id
ORDER BY COUNT(id) DESC;

3. get the count of all tasks in each project, order by projects names 

SELECT COUNT(tasks.id), projects.name
FROM projects INNER JOIN tasks ON projects.id = tasks.project_id
GROUP BY projects.name
ORDER BY projects.name

4. get the tasks for all projects having the name beginning with “N” letter

SELECT name
FROM tasks
WHERE name LIKE 'N%';


5. get the list of all projects containing the ‘a’ letter in the middle of the name, and 
show the tasks count near each project. Mention that there can exist projects without 
tasks and tasks with project_id=NULL 

SELECT projects.name, COUNT(tasks.name)
FROM projects INNER JOIN tasks ON projects.id = tasks.project_id
GROUP BY projects.name
HAVING (((projects.name) LIKE '_%a%_'));


6. get the list of tasks with duplicate names. Order alphabetically

SELECT name, COUNT(*)
FROM tasks
GROUP BY name
HAVING COUNT(*) > 1
ORDER BY name


7. get the list of tasks having several exact matches of both name and status, from 
the project ‘Garage’. Order by matches count

SELECT tasks.name, projects.name
FROM projects
INNER JOIN tasks ON tasks.project_id = projects.id 
GROUP BY tasks.name, tasks.status, projects.name
HAVING (( (COUNT(*)) > 1 ) AND ((projects.name) = 'Garage' ))
ORDER BY COUNT(*)


8. get the list of project names having more than 10 tasks in status ‘completed’. Order 
by project_id

SELECT projects.name
FROM projects INNER JOIN tasks ON projects.id = tasks.project_id
GROUP BY projects.name, projects.id, tasks.status
HAVING COUNT(tasks.status) > 10 AND tasks.status = true
ORDER BY projects.id;
